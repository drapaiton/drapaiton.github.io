org: drapaiton
app: drapaiton-portfolio
useDotenv: true

frameworkVersion: '2'
service: pubsub-model

custom:
  tableName: WebsocketUsers


provider:
  name: aws
  runtime: python3.8
  region: us-east-2
  memorySize: 128
  lambdaHashingVersion: 20201221
  stage: dev
  timeout: 5

  environment: # Service wide environment variables
    CM_URL: 'nothing'

  iam:
    role:
      name: drapaiton-portfolio-user

#  apiKeys: # List of API keys to be used by your service API Gateway REST API
#    - myFirstKey
#      value: myFirstKeyValue
#      description: myFirstKeyDescription
#      customerId: myFirstKeyCustomerId
#    - ${opt:stage}-myFirstKey
#    - ${env:MY_API_KEY} # you can hide it in a serverless variable

#  usagePlan: # Optional usage plan configuration
#    quota:
#      limit: 5000
#      offset: 2
#      period: MONTH
#    throttle:
#      burstLimit: 200
#      rateLimit: 100
  apiGateway:
    resourcePolicy:
      - Effect: Allow
        Principal: '*'
        Action: execute-api:Invoke
        Resource:
          - execute-api:/*/*/*
        Condition:
          IpAddress:
            aws:SourceIp:
              - '*'

functions:
    websocket-connect:
        handler: lambdas/websockets/connect.handler
        events:
            - websocket:
                  route: $connect
    websocket-disconnect:
        handler: lambdas/websockets/disconnect.handler
        events:
            - websocket:
                  route: $disconnect
    websocket-default:
        handler: lambdas/websockets/default.handler
        events:
            - websocket:
                  route: $default
    websocket-message:
        handler: lambdas/websockets/message.handler
        events:
            - websocket:
                  route: message



resources:
    # CloudFormation stack description
    Description: >
      PUB-SUB model implementation
      for a simple chat webapp application
